package Threads;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.concurrent.BlockingQueue;

import HTTPFile.Classes.AccessLog;
import HTTPFile.Interfaces.IParserForLog;

public class Parser implements Runnable
{
	private IParserForLog parser;
	private String path;
	private int count = 0;
	private int nLines;
	BufferedWriter out;
	BlockingQueue<String> queueLines;
	BlockingQueue<AccessLog> queueLogs;
	
	Parser(String p, int n, int s, BlockingQueue<String> lines, BlockingQueue<AccessLog> logs) throws IOException
	{
		path = p;
		nLines = n;
		out = new BufferedWriter(new FileWriter(path));
		queueLines = lines;
		queueLogs = logs;
	}
				
	public void run()
	{
		try {
				String line;		
				while (count <= nLines) 
				{
					line = queueLines.take();
					queueLogs.put(parser.getAccessLog(line));
					count++;
				}
										
			} 
			catch (InterruptedException ex)
			{
				ex.printStackTrace();
			}
	
	}
	
	void writeLine(String line) throws IOException
	{
		out.append(line);
	}
}